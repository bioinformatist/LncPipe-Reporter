% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_reporter.R
\name{run_reporter}
\alias{run_reporter}
\title{Run the main reporting pipeline.}
\usage{
run_reporter(input = system.file(file.path("extdata", "demo_results"), package
  = "LncPipeReporter"), output = "reporter.html",
  output_dir = path.expand("~/LncPipeReports"), theme = "npg",
  cdf.percent = 10, max.lncrna.len = 10000, min.expressed.sample = 50,
  ask = FALSE)
}
\arguments{
\item{input}{absolute path of input directory (results of up-stream analysis).}

\item{output}{output file name (In HTML format).}

\item{theme}{journal palette applied to all plots supplied by package \href{../../ggsci/doc/ggsci.html}{ggsci}.}

\item{cdf.percent}{percentage of values to display when calculating coding potential.}

\item{max.lncrna.len}{maximum length of lncRNAs to display when calculating distribution (percentage).}

\item{min.expressed.sample}{minimal percentage of expressed samples (percentage).}

\item{ask}{need set parameters with graphical user-interface in browser?}
}
\value{
None
}
\description{
Run the main reporting pipeline.
}
\details{
The function call a R markdown script internally by \code{rmarkdown::render}.
There're also default paramter values in the script -- sometimes if the user try run it manually in \emph{RStudio},
\emph{knitr} will bring him/her a graphical interface to choose/fill the value of paramters.
Also you can use statement like \code{rmarkdown::render('./reporter.Rmd', params = 'ask')} to call the interface in browser.
}
\examples{
run_reporter(input = system.file(paste0("extdata", .Platform$file.sep, "demo_results"),
             package = "LncPipeReporter"),
             output = 'reporter.html', theme = 'npg', cdf.percent = 10,
             max.lncrna.len = 10000, min.expressed.sample = 50, ask = FALSE)

}
